/*
 * 	데이터 저장 =======> 데이터 가공 ===========> 결과값 출력
 * 	-----------          -----------              -----------
 * 						연산자 / 제어문             브라우저,핸드폰,윈도우
 * 
 * 	변수 => 묶어서 한개 이름으로 제어
 * ---------------------------------------
 * 	관련된 데이터를 묶어서 사용: 배열 / 클래스 
 * 	관련된 명령문을 묶어서 사용: 메소드 
 * -------------------------------------------
 * 	=> 객체 지향 프로그램(5장)
 * 		배열: 관련된 데이터를 여러개 모아서 한개의 이름으로 관리 
 *  	----
 *  		1) 장점 => 여러개 변수를 한번에 처리가 가능 
 *  				   -------------------------
 *  					연속적인 메모리 구조 => 메모리 크기가 동일
 *  		2) 단점 => 가변형(컬렉션)
 *  			=> 한번 선언하면 추가/삭제가 어렵다 
 *  							----> 새롭게 큰 배열을 생성
 *  							----> 작은 배열을 생성
 *  		=> 같은 종류의 변수가 3개 이상이면 => 배열 
 *  	
 *  	1. 배열 생성
 *  	   데이터형[] 배열명; ==> 권장 사항 
 *  	   데이터형 배열명[];
 *  	2. 배열의 초기화 => 값을 지정(변수 => 초기화)
 *  		=> 지역변수(메소드안에 선언하는 변수)
 *  	=> 클래스 : 멤버변수(자동 초기화)
 *  	1) 선언 과 동시에 초기화
 *  		=> 초기값을 지정 => 명시적 초기화 
 *  			int [] arr ={1,2,3,4,5}; => 데이터 검색 => 데이터 고정 
 *  			=> 기본데이터로 초기화 
 *  	2) 선언후에 초기화
 *  		=> arr = new int [] {1,2,3,4,5}; => 메소드 이용
 *  
 *  	3) 출력(데이터 읽기)
 *  		int[] = arr={1,2,3,4,5}
 *  		= 일반 for문 이용 => 인덱스 이용
 *  			for(int i =0;i<arr.length;i++){
 *  			} 
 *  		= *** 향상된 for문 이용 : 실제 배열에 저장된 데이터 읽기 
 *  		  브라우저에 출력시에 사용되는 for 
 *  		=> 변경이 불가능 ==> 출력 
 *  
 *  	4) 메모리에 저장되는 과정 (메모리 주소를 참조해서 데이터 관리 ==> 참조변수)
 *  		int [] arr = new int [5];
 *  		----------   -----------
 *  		Stack(데이터가 있는 메모리 주소)    heap(실제 데이터가 저장된 메모리 )
 *  				
 * */
public class 배열_1 {
	//멤버 변수(전역 변수) -> 다른 클래스에서도 사용이 가능 => heap
	// 프로그램 종료시까지 사용이 가능
	
	/*	C언어와 JAVA 변수 차이점 
	 *  C언어는 시작과 동시에 사용하는 모든 변수를 선언 
	 *  자바 => 필요시마다 어떤 위치든 상관없이 변수 선언이 가능 
	 *  
	 * */
	public static void main(String[] args) {
		// 지역 변수 => main에서만 사용이 가능 => stack
		// main이 종료되면 자동으로 사라진다
		// 정수 / 문자 / 문자열
		// 1. 정수 => 10게 => 평균 => 반복문을 사용하려면 => 배열 
		// => 초기값 결정 => 0으로 디폴트 
		int arr [] = new int[10];
		
		//2. 초기화
		for (int i = 0; i < arr.length; i++) {
				arr[i]=(int)(Math.random()*100)+1; // 1~100
			
		}
		
		// 3 . 사용자 요청 처리 
		double avg=0.0;
		int sum = 0;
		for (int i : arr) {
			sum+=i;
		}
		// 4. 결과값을 출력 
		String result = String.format("%.2f",sum/10.0);
		System.out.println(result);
		
	}

}
