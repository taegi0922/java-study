
/*
 * 	웹 개발 
 * 	자바: 변수/연산자 /제어문 /메소드/예외처리 => 라이브러리 
 * 	오라클: JDBC => DBCP => MyBatis => JPA 
 * 			----
 * 	HTML / CSS => 태그 / CSS 속성 
 * 	JavaScript => Jquery(Ajax) => VueJs => ReactJs => NextJs 
 * 				  ----------- Node.js
 * 	SpringFrameWork => Spring - Boot -> Spring Security 
 * 	Python => Numpy , Padas , MatplotLib , 머신러닝
 * -------------------------------------
 * 	ElasticSearch: CRUD => NoSql
 * --------------------------------------------
 * 	AWS 
 * --------------------------------------------
 * 
 * 	메소드
 *  ------
 *  	=> 객체지향
 *  		=>구성요소
 *  		=>메소드 => 동작,행위 => 동적
 *  		** 변수 => 메소드 : 메뉴 , 버튼 , 마우스 ,키보드 입력
 *  		** 다른 클래스와 연결 
 *  		   ------------------ 메세지 ==> 통신 
 *  		** 유지보수(메소드를 변경),재사용
 *  		   ---------------------- 오버라이딩,오버로딩(기능 추가)
 *  		** String : 웹/모바일 
 *  	
 *  		Class ClassName{
 *  			---------------
 *  			 변수 
 *  			--------------
 *  			메소드 => 연산자+ 제어문
 *  			-----------------------
 *  			생성자
 *  			--------------------------	
 *  		}
 *  
 * 		=> 메소드 : 특정 작업을 수행하는 일련의 명령문의 집합
 * 					-------- 한가지 기능을 수행하게 만드는 것을 권장 
 * 			글쓰기()
 * 			{
 * 				사용자 입력 내용 읽기
 * 				오라클 연결 
 * 				데이터 추가 
 * 				오라클 닫기
 * 			}
 * 		=> 메소드 : 가독성(소스가 간결 => 수정)
 * 		=> 주로 사용처 : 클래스와 클래스의 연결 설정 
 * 						----------------------------
 * 		=> 사용하는 이유
 * 			1) 재사용
 * 			2) 유지보수(수정,추가)
 * 			3) 중복코드 제거 
 * 			4) 구조적인 프로그램 
 * 
 * 		=> 메소드 구조
 * 			1) 선언부
 * 				리턴형(결과값)
 * 				매개변수(사용자가 요청한 값) 
 * 			2) 구현부
 * 				{
 * 					---
 * 					---
 * 					return => 메소드 종료 => 없는 겨우 컴파일러 자동으로추가  void
 * 				}
 * 
 * 		메소드 형식
 * 			[접근지정어] [옵션] 리턴형 메소드명 
 * 								------ -------- => 변수 식별자
 * 								=>				=> 소문자				
 * 								 1. 기본형
 * 								 2. 클래스(String)
 * 								 3. 배열 
 * 								
 * 				statice : 공유 => 자동 메모리 할당
 * 				final  	: 종단 => 확장 불가능(변경이 불가능)
 * 				abstract: 추상 => 공통적인... -> 구현은 없고 선언
 * 		1. 리턴형 / 매개변수 => 기본형 
 * 			int plus(int a , int b)
 * 		2. 리턴형 / 매개변수 => 배열 
 * 			int [] getData(int[] arr)
 * 			{ return arr; }
 * 		3. 클래스 
 * 		String getData(String s)
 * 		{
 * 			return s;
 * 		}
 * 		
 * 		리턴형이 없는 경우 
 * 		void print()
 * 		
 *  		
 * */
public class 메소드_1 {

	public static void main(String[] args) {
	}

}
