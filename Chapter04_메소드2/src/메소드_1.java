/*
 * 1.	형식 / 문법 
 * 2.	간단한 예제 => 흐름(동작 => 호출)
 * 3.	약간 응용 => 확장
 * 4.	시간이 지나면 감이 잡힌다.
 * 
 * --------------------------------------
 * 	데이터 저장
 * 	= 변수 : 한개 데이터 저장
 * 	= 배열: 여러개 데이터 저장 => 같은 데이터 형
 *  = 클래스 : 여러개 데이터 저장 => 다른 데이터 형 => 동적
 *  ---------------------- 메모리에 저장
 * 	= 파일 => 종속(파일과 파일의 연걸이 어렵다)
 *  = RDBMS(오라클)
 *  사용자가 요청하면 => 처리 
 *  = 연산자
 *  = 제어문
 *  ----------------관련된 명령문(기능을 모아서 처리) => 메소드
 *  사용자가 요청한 위치에 처리 결과 출력
 *  = 브라우저 출력(웹)
 *  
 *  ---------------------------------------------------------
 *  일반 자바 => 오라클 연결 자바 ==> 웹 연결 서버 
 *  ---------------------------------------------------------
 *  	| 통화:스플링
 *  
 *  형식)
 *  	[접근지정어]
 *  	-----------
 *  	default
 *  	=> 같은 폴더에 존재 
 *  	  ---------- 패키지
 *  	
 *   메소드 제작
 *   	1) 반복이 많은경우
 *   	2) 기능별로 나눠서 처리 => 단락
 *   	3) 다른 클래스와 연결
 *   -------------------------------------
 *   메소드 사용 목적
 *   	1) 반복제거
 *   	2) 코드 관리가 쉽게 
 *   	3) 재사용
 *   
 *   
 *   
 *  
 * */
public class 메소드_1 {
	static void display() {
		int i=1;
		System.out.println("i"+i);
		i++;
	}
	// {} 이 종료가 되면 자동으로 메모리에서 사라진다 => 지역변수
	public static void main(String[] args) {

		System.out.println("main start"); 
		display(); 
		display(); 
		display(); 
		display();
		display();
		System.out.println("main end");

	}

}
